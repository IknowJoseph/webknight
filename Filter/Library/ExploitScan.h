/*
    AQTRONIX C++ Library
    Copyright 2005-2006 Parcifal Aertssen

    This file is part of AQTRONIX C++ Library.

    AQTRONIX C++ Library is free software; you can redistribute it
	and/or modify it under the terms of the GNU General Public License
    as published by the Free Software Foundation; either version 2 of
	the License, or (at your option) any later version.

    AQTRONIX C++ Library is distributed in the hope that it will be
	useful, but WITHOUT ANY WARRANTY; without even the implied warranty
    of MERCHANTABILITY or FITNESS FOR A PARTICULAR PURPOSE.  See the
    GNU General Public License for more details.

    You should have received a copy of the GNU General Public License
    along with AQTRONIX C++ Library; if not, write to the Free
    Software Foundation, Inc., 59 Temple Place, Suite 330, Boston,
    MA  02111-1307  USA
*/
// ExploitScan.h: interface for the CExploitScan class.
//
//////////////////////////////////////////////////////////////////////

#if !defined(AFX_EXPLOITSCAN_H__C0E13D6D_2762_4F6A_B9DB_B21A13826044__INCLUDED_)
#define AFX_EXPLOITSCAN_H__C0E13D6D_2762_4F6A_B9DB_B21A13826044__INCLUDED_

#if _MSC_VER > 1000
#pragma once
#endif // _MSC_VER > 1000

#include "StringHelper.h"

class CExploitScan : public CStringHelper
{
public:
	static int ScanSQLInjection(CString ScanString, const CStringList& SQLKeywords, CStringList& Matches, bool NormalizeWhitespace, bool ReplaceNumericValuesWithOne);
	static bool ScanHighBitShellCode(const char* ScanString);
	static bool ScanHexEncodingEmbedding(const CString& ScanString, const bool ConvertPlus=false);
	static bool ScanDirectoryTraversal(const CString& ScanString);
	static bool ScanParentPath(const CString& ScanString);
	static bool CanHexDecode(const CString& ScanString, const bool ConvertAll=false);
	static bool IsObscure(CString& Text, int MinimumLengthForScanning, LPCTSTR TheseCharsAreNotObscure);
	static bool IsObscureQuerystring(CString &Querystring, int MinimumLength);
	static bool ScanVariableLength(CString& Data, int MaxLength, TCHAR Token1, TCHAR Token2);
	static CString RemoveRFCComments(CString& RFCString);
	static CString RemoveRedundantWhitespace(CString Text);
	static CString RemoveSpaces(CString& Text, CString operators);
	static CString RemoveDoubles(CString& Text, TCHAR c);
	static CString ReplaceNumeric(CString& Text, TCHAR c);
	static bool IsLengthAllowed(CString ContentLength, CString MaxLength);

	CExploitScan();
	virtual ~CExploitScan();
};

#endif // !defined(AFX_EXPLOITSCAN_H__C0E13D6D_2762_4F6A_B9DB_B21A13826044__INCLUDED_)
